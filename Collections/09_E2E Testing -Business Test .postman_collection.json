{
	"info": {
		"_postman_id": "d1a804d1-5273-4494-a710-41509ec7f904",
		"name": "09_E2E Testing -Business Test ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "E2E Testing - QA",
			"item": [
				{
					"name": "2.1 - IE015 Simplified with Authorised Location and Missing Place of Loading Code",
					"item": [
						{
							"name": "POST IE015 Simplified Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5b00e349-cdce-48a6-a7f6-38bafcc18479",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC1\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a74bb149-3370-4181-8f0f-d6d92fd260ea",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AutLocOfGooCodHEA41>954131533-GB60DEP</AutLocOfGooCodHEA41>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <SpeCirIndHEA1>C</SpeCirIndHEA1>\n        <ComRefNumHEA>HQDOV018</ComRefNumHEA>\n        <SecHEA358>1</SecHEA358>\n        <CodPlUnHEA357>MONOPOLI001</CodPlUnHEA357>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <CONRESERS>\n         <ConResCodERS16>A3</ConResCodERS16>\n         <DatLimERS69>{{DatLimERS69}}</DatLimERS69>\n    </CONRESERS>\n    <SEAINFSLI>\n        <SeaNumSLI2>1</SeaNumSLI2>\n        <SEAIDSID>\n            <SeaIdeSID1>NCTS001</SeaIdeSID1>\n        </SEAIDSID>\n    </SEAINFSLI>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>09GB00000100000M0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <TRACONCO2>\n            <NamCO27>NCTS UK TEST LAB HMCE</NamCO27>\n            <StrAndNumCO222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO222>\n            <PosCodCO223>SS99 1AA</PosCodCO223>\n            <CitCO224>SOUTHEND-ON-SEA, ESSEX</CitCO224>\n            <CouCO225>GB</CouCO225>\n            <TINCO259>GB954131533000</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>NCTS UK TEST LAB HMCE</NamCE27>\n            <StrAndNumCE222>ITALIAN OFFICE</StrAndNumCE222>\n            <PosCodCE223>IT99 1IT</PosCodCE223>\n            <CitCE224>MILAN</CitCE224>\n            <CouCE225>IT</CouCE225>\n            <TINCE259>IT11ITALIANC11</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n\n    </GOOITEGDS>\n    <ITI>\n        <CouOfRouCodITI1>GB</CouOfRouCodITI1>\n    </ITI>\n    <ITI>\n        <CouOfRouCodITI1>FR</CouOfRouCodITI1>\n    </ITI>\n    <ITI>\n        <CouOfRouCodITI1>DE</CouOfRouCodITI1>\n    </ITI>\n    <CARTRA100>\n        <TINCARTRA254>GB954131533000</TINCARTRA254>\n    </CARTRA100>\n    <TRACORSEC037>\n        <TINTRACORSEC044>GB954131533000</TINTRACORSEC044>\n    </TRACORSEC037>\n    <TRACONSEC029>\n        <TINTRACONSEC036>IT27THEBOSS42</TINTRACONSEC036>\n    </TRACONSEC029>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "664f6027-580c-4d03-b4ac-bf4fc96ac208",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET ALL IE015 > IE016",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3650e92c-d0e0-4992-b51c-b5a09877a4f5",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"description": "IE015 > IE016",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d63f5ebb-76d4-4e7c-97d1-d049bb98b5d8",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e9068c91-0e84-4748-8b24-e23db9696805",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2.2 - IE015 Normal Declaration with Cancellation Request",
					"item": [
						{
							"name": "POST IE015 Simplified Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "44e44e63-c401-4bdf-b917-b3b80001b109",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC2\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "79ff6181-adf2-474f-a154-15f30f7e3043",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AutLocOfGooCodHEA41>Pre-Lodged</AutLocOfGooCodHEA41>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n   </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n   \n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>09GB00000100000M0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <TRACONCO2>\n            <NamCO27>NCTS UK TEST LAB HMCE</NamCO27>\n            <StrAndNumCO222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO222>\n            <PosCodCO223>SS99 1AA</PosCodCO223>\n            <CitCO224>SOUTHEND-ON-SEA, ESSEX</CitCO224>\n            <CouCO225>GB</CouCO225>\n            <TINCO259>GB954131533000</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>Corleone</NamCE27>\n            <StrAndNumCE222>23, Le Don str</StrAndNumCE222>\n            <PosCodCE223>123-456</PosCodCE223>\n            <CitCE224>Corleone</CitCE224>\n            <CouCE225>IT</CouCE225>\n            <TINCE259>IT27THEBOSS42</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "22a3f931-96b1-4056-acec-e3ab72aac3e3",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET ALL IE015 > IE928 > IE028",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3f0eef0-66bc-45d4-9c43-c19ccecc46bb",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST IE014",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1141e9e5-7614-4fcd-8ef0-761fdab7c8c3",
										"exec": [
											"var moment = require('moment')",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DocNumHEA5\",\"MRN211776653\")",
											"pm.collectionVariables.set(\"DatOfCanReqHEA147\", moment().format(\"YYYYMMDD\"));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5304695b-1d22-44d6-a472-3a731bbdd64d",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var msgId = loc.split(\"/\")[7];",
											"pm.environment.set(\"msgId\",msgId);",
											"",
											"pm.test(\"POST IE014 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC014A>\n<SynIdeMES1>UNOC</SynIdeMES1>\n<SynVerNumMES2>3</SynVerNumMES2>\n<MesRecMES6>MDTP-0000000000000000000000000{{deptId}}-01</MesRecMES6>\n<DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n<TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n<IntConRefMES11>1324445455</IntConRefMES11>\n<AppRefMES14>NCTS</AppRefMES14>\n<MesIdeMES19>1</MesIdeMES19>\n<MesTypMES20>GB014A</MesTypMES20>\n<HEAHEA>\n<DocNumHEA5>{{DocNumHEA5}}</DocNumHEA5>\n<DatOfCanReqHEA147>{{DatOfCanReqHEA147}}</DatOfCanReqHEA147>\n<CanReaHEA250>Test</CanReaHEA250>\n</HEAHEA>\n<TRAPRIPC1>\n<NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n<StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n<PosCodPC123>SS99 1AA</PosCodPC123>\n<CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n<CouPC125>GB</CouPC125>\n<NADLNGPC>EN</NADLNGPC>\n<TINPC159>GB954131533000</TINPC159>\n</TRAPRIPC1>\n<CUSOFFDEPEPT>\n<RefNumEPT1>GB000060</RefNumEPT1>\n</CUSOFFDEPEPT>\n</CC014A>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET ALL IE014 > IE009",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c67f97-be8e-499a-9d93-5c04efd069cf",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "02318dc9-a1ac-4f60-8c09-f4725f174ce8",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4b70e2b1-cb8f-41c9-b968-42736903cc2a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2.3_Happy Path - IE015(Normal) > IE928 > IE028 > IE029 ",
					"item": [
						{
							"name": "POST IE015 Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3775e3e7-51c3-45da-8ee5-96c18d72989f",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC3\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e63600f9-7b31-4d7d-b0ca-8f066c792ef8",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraAtDHEA80>GB</NatOfMeaOfTraAtDHEA80>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    \n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>09GB00000100000M0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n    <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Tea</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <TRACONCO2>\n            <NamCO27>NCTS UK TEST LAB HMCE</NamCO27>\n            <StrAndNumCO222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO222>\n            <PosCodCO223>SS99 1AA</PosCodCO223>\n            <CitCO224>SOUTHEND-ON-SEA, ESSEX</CitCO224>\n            <CouCO225>GB</CouCO225>\n            <TINCO259>GB954131533000</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>Corleone</NamCE27>\n            <StrAndNumCE222>23, Le Don str</StrAndNumCE222>\n            <PosCodCE223>123-456</PosCodCE223>\n            <CitCE224>Corleone</CitCE224>\n            <CouCE225>IT</CouCE225>\n            <TINCE259>IT27THEBOSS42</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <MarNumOfPacGS21LNG>EN</MarNumOfPacGS21LNG>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9b34bddd-d42e-41b3-9089-2a556ef7b2b6",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET ALL IE015 > IE928 > IE028 > IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "38cbc3f5-9fbd-4fe1-bce2-88b4c4c23675",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2.5 - Happy Path IE015 (Normal) with Customs Sub Place ",
					"item": [
						{
							"name": "POST IE015 Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "aab1d2ee-e286-4b53-a8bc-81645d88d599",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC5\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f0b59a65-36c1-460d-97b9-36da97b021c5",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <CusSubPlaHEA66>DOVER ERTS</CusSubPlaHEA66>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraAtDHEA80>GB</NatOfMeaOfTraAtDHEA80>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    \n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>09GB00000100000M0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n    <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Tea</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <TRACONCO2>\n            <NamCO27>NCTS UK TEST LAB HMCE</NamCO27>\n            <StrAndNumCO222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO222>\n            <PosCodCO223>SS99 1AA</PosCodCO223>\n            <CitCO224>SOUTHEND-ON-SEA, ESSEX</CitCO224>\n            <CouCO225>GB</CouCO225>\n            <TINCO259>GB954131533000</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>Corleone</NamCE27>\n            <StrAndNumCE222>23, Le Don str</StrAndNumCE222>\n            <PosCodCE223>123-456</PosCodCE223>\n            <CitCE224>Corleone</CitCE224>\n            <CouCE225>IT</CouCE225>\n            <TINCE259>IT27THEBOSS42</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <MarNumOfPacGS21LNG>EN</MarNumOfPacGS21LNG>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2d344024-43a6-420c-852d-f0ec15a6dfd6",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET ALL IE015 > IE028 > IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7daf6070-3818-456e-8dac-2b4d0f8e9f39",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ac732dc2-b1f3-417c-a16a-06557ad4446b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9ea35d5d-e341-4ec9-b869-1a849051fe18",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2.6 - Authorised Consignor, Happy Path IE015 Simplified At Departure",
					"item": [
						{
							"name": "POST IE015 Simplified Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0e113f08-8bf6-4a2d-b3f1-e1b321d72444",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC6\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "92ad5367-1779-49ce-a50d-a0e1434786ff",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AutLocOfGooCodHEA41>954131533-GB60DEP</AutLocOfGooCodHEA41>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <CONRESERS>\n         <ConResCodERS16>A3</ConResCodERS16>\n         <DatLimERS69>{{DatLimERS69}}</DatLimERS69>\n    </CONRESERS>\n    <SEAINFSLI>\n        <SeaNumSLI2>1</SeaNumSLI2>\n        <SEAIDSID>\n            <SeaIdeSID1>NCTS001</SeaIdeSID1>\n        </SEAIDSID>\n    </SEAINFSLI>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>09GB00000100000M0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <TRACONCO2>\n            <NamCO27>NCTS UK TEST LAB HMCE</NamCO27>\n            <StrAndNumCO222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO222>\n            <PosCodCO223>SS99 1AA</PosCodCO223>\n            <CitCO224>SOUTHEND-ON-SEA, ESSEX</CitCO224>\n            <CouCO225>GB</CouCO225>\n            <TINCO259>GB954131533000</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>NCTS UK TEST LAB HMCE</NamCE27>\n            <StrAndNumCE222>ITALIAN OFFICE</StrAndNumCE222>\n            <PosCodCE223>IT99 1IT</PosCodCE223>\n            <CitCE224>MILAN</CitCE224>\n            <CouCE225>IT</CouCE225>\n            <TINCE259>IT11ITALIANC11</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b16c0c90-c889-4944-9f92-822a81a26a7e",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET ALL IE015 > IE028 > IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3870a979-37bb-49ba-a3f1-09799a49ca36",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b12184cd-b050-4966-becd-53da8d97b0db",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2db5bdfd-011b-483b-82ea-0020c5be589c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2.7 - Happy Path IE015 Normal Declaration with Office of Transit",
					"item": [
						{
							"name": "POST IE015 Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8e6f0c25-313d-43ca-9ddc-9b104a19ab25",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC7\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2b731cda-05d3-456c-9b74-04a6498c3019",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n        <PlaOfLoaCodHEA46>DOVER007</PlaOfLoaCodHEA46>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <SpeCirIndHEA1>B</SpeCirIndHEA1>\n        <ComRefNumHEA>HQDOV007</ComRefNumHEA>\n        <SecHEA358>1</SecHEA358>\n        <CodPlUnHEA357>MONOPOLI007</CodPlUnHEA357>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n   \n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>09GB00000100000M0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <TRACONCO2>\n            <NamCO27>NCTS UK TEST LAB HMCE</NamCO27>\n            <StrAndNumCO222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO222>\n            <PosCodCO223>SS99 1AA</PosCodCO223>\n            <CitCO224>SOUTHEND-ON-SEA, ESSEX</CitCO224>\n            <CouCO225>GB</CouCO225>\n            <TINCO259>GB954131533000</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>Corleone</NamCE27>\n            <StrAndNumCE222>23, Le Don str</StrAndNumCE222>\n            <PosCodCE223>123-456</PosCodCE223>\n            <CitCE224>Corleone</CitCE224>\n            <CouCE225>IT</CouCE225>\n            <TINCE259>IT27THEBOSS42</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n    <ITI>\n        <CouOfRouCodITI1>GB</CouOfRouCodITI1>\n    </ITI>\n\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db0ce7a7-54e9-4912-bfca-e850eb1017bd",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET ALL IE015 >IE928 >IE028 >IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6aae589f-b91d-48fe-a963-824af8db4bdc",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "28880c90-b4e0-44e4-a211-4173783ee250",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f245f7e0-a7ae-496e-a06f-a527dd44a732",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2.8 - Italy to GB; IE015 Normal Declaration with Safety & Security Data, Normal Arrival",
					"item": [
						{
							"name": "POST IE015 Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "87ffcff2-f738-47d3-8f54-94c12d362ada",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC8\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bac7fbb6-4e57-4538-bd94-6b0f18312cc7",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>IT015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>GB</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n        <PlaOfLoaCodHEA46>MONOPOLI008</PlaOfLoaCodHEA46>\n        <CouOfDisCodHEA55>IT</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>MONOPOLI</DecPlaHEA394>\n        <SpeCirIndHEA1>C</SpeCirIndHEA1>\n        <ComRefNumHEA>HQDOV008</ComRefNumHEA>\n        <SecHEA358>1</SecHEA358>\n        <CodPlUnHEA357>DOVER008</CodPlUnHEA357>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>Corleone</NamPC17>\n        <StrAndNumPC122>23, Le Don str</StrAndNumPC122>\n        <PosCodPC123>123-456</PosCodPC123>\n        <CitPC124>Corleone</CitPC124>\n        <CouPC125>IT</CouPC125>\n        <TINPC159>IT27THEBOSS42</TINPC159>\n    </TRAPRIPC1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>IT018105</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>GB000060</RefNumEST1>\n    </CUSOFFDESEST>\n\n    <GUAGUA>\n        <GuaTypGUA1>3</GuaTypGUA1>\n    </GUAGUA>\n\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <TRACONCO2>\n            <NamCO27>Corleone</NamCO27>\n            <StrAndNumCO222>23, Le Don str</StrAndNumCO222>\n            <PosCodCO223>123-456</PosCodCO223>\n            <CitCO224>Corleone</CitCO224>\n            <CouCO225>IT</CouCO225>\n            <TINCO259>IT27THEBOSS42</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>NCTS TEST TRADER</NamCE27>\n            <StrAndNumCE222>C E HEATH HOUSE, VICTORIA</StrAndNumCE222>\n            <PosCodCE223>SS2 6DX</PosCodCE223>\n            <CitCE224>SOUTHEND-ON-SEA</CitCE224>\n            <CouCE225>GB</CouCE225>\n            <TINCE259>GB954133135000</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n\n    </GOOITEGDS>\n    <ITI>\n        <CouOfRouCodITI1>GB</CouOfRouCodITI1>\n    </ITI>\n\n    <TRACORSEC037>\n        <TINTRACORSEC044>GB954131533000</TINTRACORSEC044>\n    </TRACORSEC037>\n    <TRACONSEC029>\n        <TINTRACONSEC036>IT27THEBOSS42</TINTRACONSEC036>\n    </TRACONSEC029>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b4646ee0-4102-40b1-879a-b225cbc77727",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET ALL IE015 >IE928 >IE028 >IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "83c8e766-d50b-4e5b-81de-ba6ae3b5b101",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST IE007 Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "81884245-4753-4504-8549-09fc1895a72a",
										"exec": [
											"var moment = require('moment')",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"MRN\",\"08IT02110010000FF0\")",
											"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c2acdab1-b2ad-41d2-9061-dbbabf92679e",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"",
											"var arrivalId = loc.split(\"/\")[5];",
											"pm.environment.set(\"arrivalId\",arrivalId);",
											"",
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC007A>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>AF20201005</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <TesIndMES18>0</TesIndMES18>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB007A</MesTypMES20>\n    <HEAHEA>        \n        <DocNumHEA5>GB767240689768</DocNumHEA5>\n        <CusSubPlaHEA66>DOVER ERTS</CusSubPlaHEA66>\n        <ArrNotPlaHEA60>NE13 9AA</ArrNotPlaHEA60>\n        <ArrNotPlaHEA60LNG>EN</ArrNotPlaHEA60LNG>\n        <SimProFlaHEA132>0</SimProFlaHEA132>\n        <ArrNotDatHEA141>{{ArrNotDatHEA141}}</ArrNotDatHEA141>\n    </HEAHEA>\n    <TRADESTRD>\n        <NamTRD7>NCTS TEST TRADER</NamTRD7>\n        <StrAndNumTRD22>C E HEATH HOUSE, VICTORIA</StrAndNumTRD22>\n        <PosCodTRD23>SS2 6DX</PosCodTRD23>\n        <CitTRD24>SOUTHEND-ON-SEA</CitTRD24>\n        <CouTRD25>GB</CouTRD25>\n        <NADLNGRD>EN</NADLNGRD>\n        <TINTRD59>GB954133135000</TINTRD59>\n    </TRADESTRD>\n    <CUSOFFPREOFFRES>\n        <RefNumRES1>GB000060</RefNumRES1>\n    </CUSOFFPREOFFRES>\n  </CC007A>"
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE007 arrival Id details > IE025 > IE045",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cd3d61b3-d99d-428e-b753-087ef364d252",
										"exec": [
											"pm.test(\"Get all arrival must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2.9 - Normal IE015 Declaration, Italy to GB; Normal Arrival with Rejection Notification",
					"item": [
						{
							"name": "POST IE015 Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "fb27585c-2420-4e0b-93c7-6a5f21de51eb",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC9\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5ce237a6-722c-49c5-80d9-3b4ba83da3fa",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>IT015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>GB</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n     \n        <CouOfDisCodHEA55>IT</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>MONOPOLI</DecPlaHEA394>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>Corleone</NamPC17>\n        <StrAndNumPC122>23, Le Don str</StrAndNumPC122>\n        <PosCodPC123>123-456</PosCodPC123>\n        <CitPC124>Corleone</CitPC124>\n        <CouPC125>IT</CouPC125>\n        <TINPC159>IT27THEBOSS42</TINPC159>\n    </TRAPRIPC1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>IT018105</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>GB000060</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>3</GuaTypGUA1>\n    </GUAGUA>\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Strawberry</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <TRACONCO2>\n            <NamCO27>Corleone</NamCO27>\n            <StrAndNumCO222>23, Le Don str</StrAndNumCO222>\n            <PosCodCO223>123-456</PosCodCO223>\n            <CitCO224>Corleone</CitCO224>\n            <CouCO225>IT</CouCO225>\n            <TINCO259>IT27THEBOSS42</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>NCTS UK TEST LAB HMCE</NamCE27>\n            <StrAndNumCE222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCE222>\n            <PosCodCE223>SS99 1AA</PosCodCE223>\n            <CitCE224>SOUTHEND-ON-SEA, ESSEX</CitCE224>\n            <CouCE225>GB</CouCE225>\n            <TINCE259>GB954131533000</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2f4d1ea5-e8e2-4239-b318-3e7665423ba3",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET ALL IE015 > IE928 > IE028 > IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8c8eaf3e-b9fc-4e93-a85d-0c697351ea87",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST IE007 Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a895df43-1233-4e08-91e7-353a5c10c62d",
										"exec": [
											"var moment = require('moment')",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"MRN\",\"08IT02110010000FF0\")",
											"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "16d1765a-0b7c-40f6-8eda-dbec587bb326",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"",
											"var arrivalId = loc.split(\"/\")[5];",
											"pm.environment.set(\"arrivalId\",arrivalId);",
											"",
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC007A>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>AF21201005</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <TesIndMES18>0</TesIndMES18>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB007A</MesTypMES20>\n    <HEAHEA>        \n        <DocNumHEA5>GB767240689768</DocNumHEA5>\n        <CusSubPlaHEA66>No Place</CusSubPlaHEA66>\n        <ArrNotPlaHEA60>NE13 9AA</ArrNotPlaHEA60>\n        <ArrNotPlaHEA60LNG>EN</ArrNotPlaHEA60LNG>\n        <SimProFlaHEA132>0</SimProFlaHEA132>\n        <ArrNotDatHEA141>{{ArrNotDatHEA141}}</ArrNotDatHEA141>\n    </HEAHEA>\n    <TRADESTRD>\n        <NamTRD7>NCTS TEST TRADER</NamTRD7>\n        <StrAndNumTRD22>C E HEATH HOUSE, VICTORIA</StrAndNumTRD22>\n        <PosCodTRD23>SS2 6DX</PosCodTRD23>\n        <CitTRD24>SOUTHEND-ON-SEA</CitTRD24>\n        <CouTRD25>GB</CouTRD25>\n        <NADLNGRD>EN</NADLNGRD>\n        <TINTRD59>GB954133135000</TINTRD59>\n    </TRADESTRD>\n    <CUSOFFPREOFFRES>\n        <RefNumRES1>GB000060</RefNumRES1>\n    </CUSOFFPREOFFRES>\n  </CC007A>"
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE007 arrival Id details > IE008",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2eb75cd7-6871-4907-8b53-c69b1845725d",
										"exec": [
											"pm.test(\"Get all arrival must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cce2e858-e79d-4cac-be98-e077f59e75ee",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "05f3a7f8-0ae7-4ec6-97dd-7e20852feb37",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2.10 - IE015 Simplified Arrival, Italy to GB with Authorised Consignee, ",
					"item": [
						{
							"name": "POST IE015 Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "87f8a810-fb0a-4fdc-8702-c49000e241ac",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC10\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8c32bdff-f34e-412d-983f-1c75b872e4ca",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>GB</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n        <CouOfDisCodHEA55>IT</CouOfDisCodHEA55>\n   \n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraAtDHEA80>GB</NatOfMeaOfTraAtDHEA80>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n    </HEAHEA>\n   <TRAPRIPC1>\n        <NamPC17>Corleone</NamPC17>\n        <StrAndNumPC122>23, Le Don str</StrAndNumPC122>\n        <PosCodPC123>123-456</PosCodPC123>\n        <CitPC124>Corleone</CitPC124>\n        <CouPC125>IT</CouPC125>\n        <TINPC159>IT27THEBOSS42</TINPC159>\n    </TRAPRIPC1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1></RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>09GB00000100000M0</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n    <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Tea</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <TRACONCO2>\n            <NamCO27>NCTS UK TEST LAB HMCE</NamCO27>\n            <StrAndNumCO222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO222>\n            <PosCodCO223>SS99 1AA</PosCodCO223>\n            <CitCO224>SOUTHEND-ON-SEA, ESSEX</CitCO224>\n            <CouCO225>GB</CouCO225>\n            <TINCO259>GB954131533000</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>NCTS TEST TRADER</NamCE27>\n            <StrAndNumCE222>C E HEATH HOUSE, VICTORIA</StrAndNumCE222>\n            <PosCodCE223>SS2 6DX</PosCodCE223>\n            <CitCE224>SOUTHEND-ON-SEA</CitCE224>\n            <CouCE225>GB</CouCE225>\n            <TINCE259>GB954133135000</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <MarNumOfPacGS21LNG>EN</MarNumOfPacGS21LNG>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5ca59ec0-0ca6-4ebc-81bb-85c3fc5521e4",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET ALL IE015 > IE928 >IE028 >IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4dc4c0ea-3501-4de2-ad89-2e9dbcc36a4d",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST IE007 Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0f91e849-d663-41bc-a987-0c47b11b43da",
										"exec": [
											"var moment = require('moment')",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"MRN\",\"08IT02110010000FF0\")",
											"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1601f341-6908-4597-9db3-2ef3dff631f8",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"",
											"var arrivalId = loc.split(\"/\")[5];",
											"pm.environment.set(\"arrivalId\",arrivalId);",
											"",
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC007A>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>AF20201005</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <TesIndMES18>0</TesIndMES18>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB007A</MesTypMES20>\n    <HEAHEA>        \n        <DocNumHEA5>GB767240689768</DocNumHEA5>\n        <ArrNotPlaHEA60>Dover</ArrNotPlaHEA60>\n        <ArrNotPlaHEA60LNG>EN</ArrNotPlaHEA60LNG>\n        <ArrNotPlaHEA60>953574106-GB60DEP</ArrNotPlaHEA60>\n        <SimProFlaHEA132>1</SimProFlaHEA132>\n        <ArrNotDatHEA141>{{ArrNotDatHEA141}}</ArrNotDatHEA141>\n    </HEAHEA>\n    <TRADESTRD>\n        <NamTRD7>NCTS TEST TRADER</NamTRD7>\n        <StrAndNumTRD22>C E HEATH HOUSE, VICTORIA</StrAndNumTRD22>\n        <PosCodTRD23>SS2 6DX</PosCodTRD23>\n        <CitTRD24>SOUTHEND-ON-SEA</CitTRD24>\n        <CouTRD25>GB</CouTRD25>\n        <NADLNGRD>EN</NADLNGRD>\n        <TINTRD59>GB954133135000</TINTRD59>\n    </TRADESTRD>\n    <CUSOFFPREOFFRES>\n        <RefNumRES1>GB000060</RefNumRES1>\n    </CUSOFFPREOFFRES>\n  </CC007A>"
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE007 arrival Id details > IE043",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "297fed7f-a2b5-4017-b0c5-6dcb401c79b4",
										"exec": [
											"pm.test(\"Get all arrival must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.10.7 INVALID IE044 (Unloading Remarks) ",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "456628f0-a48d-4f9a-bac2-addf76e1e451",
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"pm.test(\"Validate location\", function () {",
											"    var arr_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"",
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"tests[loc] = loc;",
											"var messageId = loc.split(\"/\")[7];",
											"pm.environment.set(\"messageId\",messageId);",
											"console.log(\"message id is \"+messageId)",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a584707c-9856-4602-b911-8d32be6bfbf4",
										"exec": [
											"var moment = require('moment')",
											"let yesterday = moment();",
											"yesterday.subtract(1, 'days');",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"",
											"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
											"pm.collectionVariables.set(\"UnlDatREM67\", yesterday.format(\"YYYYMMDD\"))",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true,
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC044A>\n   <SynIdeMES1>UNOC</SynIdeMES1>\n   <SynVerNumMES2>3</SynVerNumMES2>\n   <MesRecMES6>NCTS</MesRecMES6>\n   <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n   <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n   <IntConRefMES11>WE201015102567</IntConRefMES11>\n   <AppRefMES14>NCTS</AppRefMES14>\n   <TesIndMES18>0</TesIndMES18>\n   <MesIdeMES19>1</MesIdeMES19>\n   <MesTypMES20>GB044A</MesTypMES20>\n   <HEAHEA>\n      <DocNumHEA5>19IT02110010007BA9</DocNumHEA5>\n      <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n      <IdeOfMeaOfTraAtDHEA78LNG>EN</IdeOfMeaOfTraAtDHEA78LNG>\n      <NatOfMeaOfTraAtDHEA80>IT</NatOfMeaOfTraAtDHEA80>\n      <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n      <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n      <TotGroMasHEA307>1000</TotGroMasHEA307>\n   </HEAHEA>\n   <TRADESTRD>\n      <NamTRD7>NCTS TEST TRADER</NamTRD7>\n      <StrAndNumTRD22>CE HEATH HOUSE, VICTORIA AV</StrAndNumTRD22>\n      <CitTRD24>SOUTHEND-ON-SEA, ESSEX</CitTRD24>\n      <CouTRD25>GB</CouTRD25>\n      <NADLNGRD>EN</NADLNGRD>\n      <TINTRD59>GB954133135000</TINTRD59>\n   </TRADESTRD>\n   <CUSOFFPREOFFRES>\n      <RefNumRES1>GB000060</RefNumRES1>\n   </CUSOFFPREOFFRES>\n   <UNLREMREM>\n      <StaOfTheSeaOKREM19>1</StaOfTheSeaOKREM19>\n      <UnlRemREM53>HEADER PAGE Other things to report. Updated Total number of packages 6 to 8, Total gross mass kg 6 to 7, Identities of seals updated each and added 2 new seals.</UnlRemREM53>\n      <UnlRemREM53LNG>EN</UnlRemREM53LNG>\n      <ConREM65>1</ConREM65>\n      <UnlComREM66>1</UnlComREM66>\n      <UnlDatREM67>{{UnlDatREM67}}</UnlDatREM67>\n   </UNLREMREM>\n   <GOOITEGDS>\n      <IteNumGDS7>1</IteNumGDS7>\n      <GooDesGDS23>Daffodils</GooDesGDS23>\n      <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n      <GroMasGDS46>1000</GroMasGDS46>\n      <NetMasGDS48>950</NetMasGDS48>\n      <PACGS2>\n         <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n         <MarNumOfPacGS21LNG>EN</MarNumOfPacGS21LNG>\n         <KinOfPacGS23>BX</KinOfPacGS23>\n         <NumOfPacGS24>1</NumOfPacGS24>\n      </PACGS2>\n   </GOOITEGDS>\n</CC044A>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.10.8 GET messages > IE058",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "90b6c848-4c81-4536-a1ba-4b965e28053b",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.10.9 VALID IE044 (Unloading Remarks)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "78a4cc35-4f40-4d31-83d5-433f2f022be9",
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"pm.test(\"Validate location\", function () {",
											"    var arr_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"",
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"tests[loc] = loc;",
											"var messageId = loc.split(\"/\")[7];",
											"pm.environment.set(\"messageId\",messageId);",
											"console.log(\"message id is \"+messageId)",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "37dfbd1e-c4dc-4343-a55d-91ae394fe75b",
										"exec": [
											"var moment = require('moment')",
											"let yesterday = moment();",
											"yesterday.subtract(1, 'days');",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"",
											"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true,
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC044A>\n   <SynIdeMES1>UNOC</SynIdeMES1>\n   <SynVerNumMES2>3</SynVerNumMES2>\n   <MesRecMES6>NCTS</MesRecMES6>\n   <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n   <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n   <IntConRefMES11>WE201015102567</IntConRefMES11>\n   <AppRefMES14>NCTS</AppRefMES14>\n   <TesIndMES18>0</TesIndMES18>\n   <MesIdeMES19>1</MesIdeMES19>\n   <MesTypMES20>GB044A</MesTypMES20>\n   <HEAHEA>\n      <DocNumHEA5>19IT02110010007BA9</DocNumHEA5>\n      <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n      <IdeOfMeaOfTraAtDHEA78LNG>EN</IdeOfMeaOfTraAtDHEA78LNG>\n      <NatOfMeaOfTraAtDHEA80>IT</NatOfMeaOfTraAtDHEA80>\n      <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n      <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n      <TotGroMasHEA307>1000</TotGroMasHEA307>\n   </HEAHEA>\n   <TRADESTRD>\n      <NamTRD7>NCTS TEST TRADER</NamTRD7>\n      <StrAndNumTRD22>CE HEATH HOUSE, VICTORIA AV</StrAndNumTRD22>\n      <CitTRD24>SOUTHEND-ON-SEA, ESSEX</CitTRD24>\n      <CouTRD25>GB</CouTRD25>\n      <NADLNGRD>EN</NADLNGRD>\n      <TINTRD59>GB954133135000</TINTRD59>\n   </TRADESTRD>\n   <CUSOFFPREOFFRES>\n      <RefNumRES1>GB000060</RefNumRES1>\n   </CUSOFFPREOFFRES>\n   <UNLREMREM>\n      <StaOfTheSeaOKREM19>1</StaOfTheSeaOKREM19>\n      <UnlRemREM53>HEADER PAGE Other things to report. Updated Total number of packages 6 to 8, Total gross mass kg 6 to 7, Identities of seals updated each and added 2 new seals.</UnlRemREM53>\n      <UnlRemREM53LNG>EN</UnlRemREM53LNG>\n      <ConREM65>1</ConREM65>\n      <UnlComREM66>1</UnlComREM66>\n      <UnlDatREM67>{{DatOfPreMES9}}</UnlDatREM67>\n   </UNLREMREM>\n   <GOOITEGDS>\n      <IteNumGDS7>1</IteNumGDS7>\n      <GooDesGDS23>Daffodils</GooDesGDS23>\n      <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n      <GroMasGDS46>1000</GroMasGDS46>\n      <NetMasGDS48>950</NetMasGDS48>\n      <PACGS2>\n         <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n         <MarNumOfPacGS21LNG>EN</MarNumOfPacGS21LNG>\n         <KinOfPacGS23>BX</KinOfPacGS23>\n         <NumOfPacGS24>1</NumOfPacGS24>\n      </PACGS2>\n   </GOOITEGDS>\n</CC044A>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.10.10 GET messages > IE025 > IE045",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "43b106c1-eb98-45d3-beb1-64a27edfccce",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "37198629-4468-4020-a543-038cab0d173d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7fd83c1f-59db-4575-a4a9-5b7a86ea2008",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2.11 - Simplified IE015 Declaration, Simplified Declaration with Guarantee Not Valid",
					"item": [
						{
							"name": "POST IE015 Simplified Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d489d42a-4d50-440c-94b8-40e4007786ef",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC11\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7ce13002-2518-43e9-9e71-0e5f474dc7c8",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AutLocOfGooCodHEA41>954131533-GB60DEP</AutLocOfGooCodHEA41>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <CONRESERS>\n         <ConResCodERS16>A3</ConResCodERS16>\n         <DatLimERS69>{{DatLimERS69}}</DatLimERS69>\n    </CONRESERS>\n    <SEAINFSLI>\n        <SeaNumSLI2>1</SeaNumSLI2>\n        <SEAIDSID>\n            <SeaIdeSID1>NCTS001</SeaIdeSID1>\n        </SEAIDSID>\n    </SEAINFSLI>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n        <GUAREFREF>\n            <GuaRefNumGRNREF1>20GB0000010000GV3</GuaRefNumGRNREF1>\n            <AccCodREF6>AC01</AccCodREF6>\n        </GUAREFREF>\n    </GUAGUA>\n\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Daffodils</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <TRACONCO2>\n            <NamCO27>NCTS UK TEST LAB HMCE</NamCO27>\n            <StrAndNumCO222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO222>\n            <PosCodCO223>SS99 1AA</PosCodCO223>\n            <CitCO224>SOUTHEND-ON-SEA, ESSEX</CitCO224>\n            <CouCO225>GB</CouCO225>\n            <TINCO259>GB954131533000</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>NCTS UK TEST LAB HMCE</NamCE27>\n            <StrAndNumCE222>ITALIAN OFFICE</StrAndNumCE222>\n            <PosCodCE223>IT99 1IT</PosCodCE223>\n            <CitCE224>MILAN</CitCE224>\n            <CouCE225>IT</CouCE225>\n            <TINCE259>IT11ITALIANC11</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d2a169e8-4248-497c-adb2-873b837bb4c8",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET ALL IE015 > IE028 >IE055",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d0ad2d0-2451-42ce-a283-a6eccc653a95",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.11.4 IE014 ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ba3120da-f4d8-4f5a-867d-8b303a42da3f",
										"exec": [
											"var moment = require('moment')",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",\"PRI2020\")",
											"pm.collectionVariables.set(\"DatOfCanReqHEA147\", moment().format(\"YYYYMMDD\"));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2675b8c0-6c4f-4a51-953f-bcdefb3bde2c",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var msgId = loc.split(\"/\")[7];",
											"pm.environment.set(\"msgId\",msgId);",
											"",
											"pm.test(\"POST IE014 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC014A>\n<SynIdeMES1>UNOC</SynIdeMES1>\n<SynVerNumMES2>3</SynVerNumMES2>\n<MesRecMES6>NCTS</MesRecMES6>\n<DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n<TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n<IntConRefMES11>191217156470899</IntConRefMES11>\n<AppRefMES14>NCTS</AppRefMES14>\n<TesIndMES18>0</TesIndMES18>\n<MesIdeMES19>1</MesIdeMES19>\n<MesTypMES20>GB014A</MesTypMES20>\n<HEAHEA>\n<DocNumHEA5>MRN</DocNumHEA5>\n<DatOfCanReqHEA147>{{DatOfCanReqHEA147}}</DatOfCanReqHEA147>\n<CanReaHEA250>Test Cancellation</CanReaHEA250>\n</HEAHEA>\n<TRAPRIPC1>\n<NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n<StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n<PosCodPC123>SS99 1AA</PosCodPC123>\n<CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n<CouPC125>GB</CouPC125>\n<TINPC159>GB954131533000</TINPC159>\n</TRAPRIPC1>\n<CUSOFFDEPEPT>\n<RefNumEPT1>GB000060</RefNumEPT1>\n</CUSOFFDEPEPT>\n</CC014A>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.11.5 GET ALL IE014 > IE009",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e77ab8a8-926c-4328-b7f1-f8d328fd251f",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0553cd8a-8dfc-4743-9684-32187aa21fda",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "97a34b7f-53b5-4e0f-9855-c21fc1a0824d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2.12 - Normal IE015 Declaration Italy to GB; Simplified Arrival, Non-Satisfactory Unloading Remarks",
					"item": [
						{
							"name": "POST IE015 Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "88817d44-0820-4807-a46a-a1dc9936406b",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC11\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8d17ba43-64f0-4efd-8171-2cf186f977e0",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>IT015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>GB</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n        <CouOfDisCodHEA55>IT</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>MONOPOLI</DecPlaHEA394>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>Corleone</NamPC17>\n        <StrAndNumPC122>23, Le Don str</StrAndNumPC122>\n        <PosCodPC123>123-456</PosCodPC123>\n        <CitPC124>Corleone</CitPC124>\n        <CouPC125>IT</CouPC125>\n        <TINPC159>IT27THEBOSS42</TINPC159>\n    </TRAPRIPC1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>IT018105</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>GB000060</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>3</GuaTypGUA1>\n            <GUAREFREF>\n            <OthGuaRefREF4>20GB0000010000GW2</OthGuaRefREF4>\n    </GUAREFREF>\n    </GUAGUA>\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Lilies</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <TRACONCO2>\n            <NamCO27>NCTS UK TEST LAB HMCE</NamCO27>\n            <StrAndNumCO222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO222>\n            <PosCodCO223>S99 1AA</PosCodCO223>\n            <CitCO224>SOUTHEND-ON-SEA, ESSEX</CitCO224>\n            <CouCO225>GB</CouCO225>\n            <TINCO259>GB954131533000</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>NCTS TEST TRADER</NamCE27>\n            <StrAndNumCE222>CE HEATH HOUSE, VICTORIA AV</StrAndNumCE222>\n            <PosCodCE223>SS2 6DX</PosCodCE223>\n            <CitCE224>SOUTHEND-ON-SEA, ESSEX</CitCE224>\n            <CouCE225>GB</CouCE225>\n            <TINCE259>GB954133135000</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db40cc7c-9244-42f0-b5f1-f95cef1bb14c",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.12.2 GET ALL IE015 > IE928 >IE028 >IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50d289e7-4171-48d8-9db8-7d007cce64fe",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.12.5 POST IE007 Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ada211ea-016f-4b7b-8808-113bdfe2d300",
										"exec": [
											"var moment = require('moment')",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"MRN\",\"08IT02110010000FF0\")",
											"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a6cad994-b4ff-405c-b0ec-1fa5901eb13a",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"",
											"var arrivalId = loc.split(\"/\")[5];",
											"pm.environment.set(\"arrivalId\",arrivalId);",
											"",
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC007A>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>AF202023405</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <TesIndMES18>0</TesIndMES18>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB007A</MesTypMES20>\n    <HEAHEA>        \n        <DocNumHEA5>MRN</DocNumHEA5>\n        <ArrNotPlaHEA60>Dover</ArrNotPlaHEA60>\n        <ArrNotPlaHEA60LNG>EN</ArrNotPlaHEA60LNG>\n        <ArrNotPlaHEA60>953574106-GB60DEP</ArrNotPlaHEA60>\n        <SimProFlaHEA132>1</SimProFlaHEA132>\n        <ArrNotDatHEA141>{{ArrNotDatHEA141}}</ArrNotDatHEA141>\n    </HEAHEA>\n    <TRADESTRD>\n        <NamTRD7>NCTS TEST TRADER</NamTRD7>\n        <StrAndNumTRD22>C E HEATH HOUSE, VICTORIA</StrAndNumTRD22>\n        <PosCodTRD23>SS2 6DX</PosCodTRD23>\n        <CitTRD24>SOUTHEND-ON-SEA</CitTRD24>\n        <CouTRD25>GB</CouTRD25>\n        <NADLNGRD>EN</NADLNGRD>\n        <TINTRD59>GB954133135000</TINTRD59>\n    </TRADESTRD>\n    <CUSOFFPREOFFRES>\n        <RefNumRES1>GB000060</RefNumRES1>\n    </CUSOFFPREOFFRES>\n  </CC007A>"
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.12.6 GET IE007 arrival Id details > IE043",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09f99c75-9a85-4a8c-9a09-03c58356f8ff",
										"exec": [
											"pm.test(\"Get all arrival must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.12.7 ‘Non-Satisfactory’  VALID IE044 (Unloading Remarks) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4cc25bd0-ac2d-4974-9b47-4ede06aad339",
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"pm.test(\"Validate location\", function () {",
											"    var arr_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"",
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"tests[loc] = loc;",
											"var messageId = loc.split(\"/\")[7];",
											"pm.environment.set(\"messageId\",messageId);",
											"console.log(\"message id is \"+messageId)",
											"",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "edea149f-898f-40f5-a701-44e4b94858fb",
										"exec": [
											"var moment = require('moment')",
											"let yesterday = moment();",
											"yesterday.subtract(1, 'days');",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"",
											"pm.collectionVariables.set(\"ArrNotDatHEA141\", moment().format(\"YYYYMMDD\"))",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true,
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC044A>\n   <SynIdeMES1>UNOC</SynIdeMES1>\n   <SynVerNumMES2>3</SynVerNumMES2>\n   <MesRecMES6>NCTS</MesRecMES6>\n   <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n   <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n   <IntConRefMES11>WE201015102567</IntConRefMES11>\n   <AppRefMES14>NCTS</AppRefMES14>\n   <TesIndMES18>0</TesIndMES18>\n   <MesIdeMES19>1</MesIdeMES19>\n   <MesTypMES20>GB044A</MesTypMES20>\n   <HEAHEA>\n      <DocNumHEA5>19IT02110010007BA9</DocNumHEA5>\n      <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n      <IdeOfMeaOfTraAtDHEA78LNG>EN</IdeOfMeaOfTraAtDHEA78LNG>\n      <NatOfMeaOfTraAtDHEA80>IT</NatOfMeaOfTraAtDHEA80>\n      <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n      <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n      <TotGroMasHEA307>1000</TotGroMasHEA307>\n   </HEAHEA>\n   <TRADESTRD>\n      <NamTRD7>NCTS TEST TRADER</NamTRD7>\n      <StrAndNumTRD22>CE HEATH HOUSE, VICTORIA AV</StrAndNumTRD22>\n      <CitTRD24>SOUTHEND-ON-SEA, ESSEX</CitTRD24>\n      <CouTRD25>GB</CouTRD25>\n      <NADLNGRD>EN</NADLNGRD>\n      <TINTRD59>GB954133135000</TINTRD59>\n   </TRADESTRD>\n   <CUSOFFPREOFFRES>\n      <RefNumRES1>GB000060</RefNumRES1>\n   </CUSOFFPREOFFRES>\n   <UNLREMREM>\n      <StaOfTheSeaOKREM19>1</StaOfTheSeaOKREM19>\n      <UnlRemREM53>HEADER PAGE Other things to report. Updated Total number of packages 6 to 8, Total gross mass kg 6 to 7, Identities of seals updated each and added 2 new seals.</UnlRemREM53>\n      <UnlRemREM53LNG>EN</UnlRemREM53LNG>\n      <ConREM65>1</ConREM65>\n      <UnlComREM66>1</UnlComREM66>\n      <UnlDatREM67>{{DatOfPreMES9}}</UnlDatREM67>\n   </UNLREMREM>\n   <GOOITEGDS>\n      <IteNumGDS7>1</IteNumGDS7>\n      <GooDesGDS23>Daffodils</GooDesGDS23>\n      <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n      <GroMasGDS46>1000</GroMasGDS46>\n      <NetMasGDS48>950</NetMasGDS48>\n      <PACGS2>\n         <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n         <MarNumOfPacGS21LNG>EN</MarNumOfPacGS21LNG>\n         <KinOfPacGS23>BX</KinOfPacGS23>\n         <NumOfPacGS24>1</NumOfPacGS24>\n      </PACGS2>\n   </GOOITEGDS>\n</CC044A>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.12.8 GET messages > IE025 > IE045",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "92a5cfa8-1d42-42bc-bfed-8c6817290303",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/arrivals/{{arrivalId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"arrivals",
										"{{arrivalId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f2358029-2e41-4019-9799-3229480bc3ab",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "becf674f-2b25-4c05-9b80-c25b02b18a9c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2.13 - Normal IE015 Declaration; Foreign Guarantee with Liability Amount",
					"item": [
						{
							"name": "2.13.1 POST IE015 Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ce84f62e-692c-40a2-a304-b67ecfd9139b",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC11\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b5e96554-0ffb-46b9-a526-1cccc14949aa",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n     \n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>Corleone</NamPC17>\n        <StrAndNumPC122>23, Le Don str</StrAndNumPC122>\n        <PosCodPC123>123-456</PosCodPC123>\n        <CitPC124>Corleone</CitPC124>\n        <CouPC125>IT</CouPC125>\n        <TINPC159>IT27THEBOSS42</TINPC159>\n    </TRAPRIPC1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>3</GuaTypGUA1>\n            <GUAREFREF>\n            <OthGuaRefREF4>20GB0000010000GV3</OthGuaRefREF4>\n    </GUAREFREF>\n    </GUAGUA>\n   <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Roses</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <SPEMENMT2>\n         <AddInfMT21>9000GBP09IT01110000001G4</AddInfMT21>\n         <AddInfCodMT23>CAL</AddInfCodMT23>\n        </SPEMENMT2>\n        <TRACONCO2>\n            <NamCO27>NCTS UK TEST LAB HMCE</NamCO27>\n            <StrAndNumCO222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO222>\n            <PosCodCO223>S99 1AA</PosCodCO223>\n            <CitCO224>SOUTHEND-ON-SEA, ESSEX</CitCO224>\n            <CouCO225>GB</CouCO225>\n            <TINCO259>GB954131533000</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>NCTS WEB TEST LAB HMCE</NamCE27>\n            <StrAndNumCE222>ITALIAN OFFICE</StrAndNumCE222>\n            <PosCodCE223>IT99 1IT</PosCodCE223>\n            <CitCE224>MILAN</CitCE224>\n            <CouCE225>IT</CouCE225>\n            <TINCE259>IT11ITALIANC11</TINCE259>\n        </TRACONCE2>\n\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>\n",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8fbf8d21-995c-4004-bbb7-138d61594fd9",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET ALL IE015 > IE928 >IE028 >IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f53cc155-1e49-45bd-b688-abeb3f0a497f",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "36cdb903-8c02-48f1-85a0-233410cb9640",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c8a7144f-e16b-4de3-bfa7-2f1d343e07c8",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2.14 - Normal IE015 Declaration Foreign Guarantee with Liability Amount in excess of available limit on guarantee",
					"item": [
						{
							"name": "2.14.1 POST IE015 Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ad186590-1eee-4f1a-8b8d-334cc1d5a3b0",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC11\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "96d5419f-ca57-42dd-a899-b9cba0292d0e",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>Corleone</NamPC17>\n        <StrAndNumPC122>23, Le Don str</StrAndNumPC122>\n        <PosCodPC123>123-456</PosCodPC123>\n        <CitPC124>Corleone</CitPC124>\n        <CouPC125>IT</CouPC125>\n        <TINPC159>IT27THEBOSS42</TINPC159>\n    </TRAPRIPC1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n            <GUAREFREF>\n            <OthGuaRefREF4>20GB0000010000GV3</OthGuaRefREF4>\n            <AccCodREF6>AC01</AccCodREF6>\n            </GUAREFREF>\n    </GUAGUA>\n     <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Cashew</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <SPEMENMT2>\n         <AddInfMT21>1400000GBP09IT01110000001H3</AddInfMT21>\n         <AddInfCodMT23>CAL</AddInfCodMT23>\n        </SPEMENMT2>\n        <TRACONCO2>\n            <NamCO27>NCTS UK TEST LAB HMCE</NamCO27>\n            <StrAndNumCO222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO222>\n            <PosCodCO223>S99 1AA</PosCodCO223>\n            <CitCO224>SOUTHEND-ON-SEA, ESSEX</CitCO224>\n            <CouCO225>GB</CouCO225>\n            <TINCO259>GB954131533000</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>NCTS WEB TEST LAB HMCE</NamCE27>\n            <StrAndNumCE222>ITALIAN OFFICE</StrAndNumCE222>\n            <PosCodCE223>IT99 1IT</PosCodCE223>\n            <CitCE224>MILAN</CitCE224>\n            <CouCE225>IT</CouCE225>\n            <TINCE259>IT11ITALIANC11</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ca29624-66fe-4aaa-8c0c-3aab9362e5e0",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.14.2 GET ALL IE015 > IE928 >IE028 > IE055",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a1477ff5-7648-4685-a57e-4f5409ad6ad8",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.14.5 IE014",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cb0e536d-0d6e-4ae8-8e38-0b2984c142fa",
										"exec": [
											"var moment = require('moment')",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",\"PRI2020\")",
											"pm.collectionVariables.set(\"DatOfCanReqHEA147\", moment().format(\"YYYYMMDD\"));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b95b9459-d0dd-4b71-acd9-6bb0d89d77fa",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var msgId = loc.split(\"/\")[7];",
											"pm.environment.set(\"msgId\",msgId);",
											"",
											"pm.test(\"POST IE014 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC014A>\n<SynIdeMES1>UNOC</SynIdeMES1>\n<SynVerNumMES2>3</SynVerNumMES2>\n<MesRecMES6>NCTS</MesRecMES6>\n<DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n<TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n<IntConRefMES11>19121719470899</IntConRefMES11>\n<AppRefMES14>NCTS</AppRefMES14>\n<TesIndMES18>0</TesIndMES18>\n<MesIdeMES19>1</MesIdeMES19>\n<MesTypMES20>GB014A</MesTypMES20>\n<HEAHEA>\n<DocNumHEA5>MRN</DocNumHEA5>\n<DatOfCanReqHEA147>{{DatOfCanReqHEA147}}</DatOfCanReqHEA147>\n<CanReaHEA250>Amount Of Guarantee Not Sufficient</CanReaHEA250>\n</HEAHEA>\n<TRAPRIPC1>\n<NamPC17>CORLEONE</NamPC17>\n<StrAndNumPC122>23 LE DON STR</StrAndNumPC122>\n<PosCodPC123>123-456</PosCodPC123>\n<CitPC124>CORLEONE</CitPC124>\n<CouPC125>IT</CouPC125>\n<TINPC159>IT27THEBOSS42</TINPC159>\n</TRAPRIPC1>\n<CUSOFFDEPEPT>\n<RefNumEPT1>GB000060</RefNumEPT1>\n</CUSOFFDEPEPT>\n</CC014A>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.11.5 GET ALL IE014 > IE009",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d8fa209-48e3-4e9c-ae17-991d17084fe4",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cca977ab-a5ae-45d9-b26c-047f99e1afc4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9934bc70-0c34-4b19-9dd6-2765fdb06588",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2.15 - IE015 Normal Declaration; Foreign Guarantee with No Liability Amount",
					"item": [
						{
							"name": "2.15.1 IE015 Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "81fcd7ba-f20e-43cf-a920-31ffe4cb90f5",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC11\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ae7b4c73-f9cc-45c1-8f57-d0a7d360e0c5",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>Corleone</NamPC17>\n        <StrAndNumPC122>23, Le Don str</StrAndNumPC122>\n        <PosCodPC123>123-456</PosCodPC123>\n        <CitPC124>Corleone</CitPC124>\n        <CouPC125>IT</CouPC125>\n        <TINPC159>IT27THEBOSS42</TINPC159>\n    </TRAPRIPC1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n            <GUAREFREF>\n            <OthGuaRefREF4>20GB0000010000GV3</OthGuaRefREF4>\n            <AccCodREF6>AC01</AccCodREF6>\n            </GUAREFREF>\n    </GUAGUA>\n     <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>ABC</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n\n        <TRACONCO2>\n            <NamCO27>NCTS UK TEST LAB HMCE</NamCO27>\n            <StrAndNumCO222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO222>\n            <PosCodCO223>S99 1AA</PosCodCO223>\n            <CitCO224>SOUTHEND-ON-SEA, ESSEX</CitCO224>\n            <CouCO225>GB</CouCO225>\n            <TINCO259>GB954131533000</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>NCTS WEB TEST LAB HMCE</NamCE27>\n            <StrAndNumCE222>ITALIAN OFFICE</StrAndNumCE222>\n            <PosCodCE223>IT99 1IT</PosCodCE223>\n            <CitCE224>MILAN</CitCE224>\n            <CouCE225>IT</CouCE225>\n            <TINCE259>IT11ITALIANC11</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "27457c66-b0d9-467c-924d-1ab675a6328d",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.15.2 GET ALL IE015 > IE928 >IE028 > IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5fab3790-e704-4f7f-8854-eee66dae89b2",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "38fc2013-6c41-496e-ab5e-972057b8a60c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "84c19298-74dc-46af-b9b6-e775184e7c82",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2.16 - IE015 Normal Declaration TIR Declaration",
					"item": [
						{
							"name": "2.16.1 POST IE015 Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "9df6a4b0-a379-492e-9e49-5d7973b7ac9a",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC11\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1fca3f4c-da61-4afe-8b1b-fe5302e8f757",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>TIR</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AgrLocOfGooHEA39>Pre-Lodged</AgrLocOfGooHEA39>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>Corleone</NamPC17>\n        <StrAndNumPC122>23, Le Don str</StrAndNumPC122>\n        <PosCodPC123>123-456</PosCodPC123>\n        <CitPC124>Corleone</CitPC124>\n        <CouPC125>IT</CouPC125>\n        <TINPC159>IT27THEBOSS42</TINPC159>\n        <HITPC126>GBR/022/1234567</HITPC126>\n    </TRAPRIPC1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>B</GuaTypGUA1>\n            <GUAREFREF>\n            <OthGuaRefREF4>XE25000001</OthGuaRefREF4>\n            <AccCodREF6>AC01</AccCodREF6>\n            </GUAREFREF>\n    </GUAGUA>\n     <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>ABC</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <PRODOCDC2>\n            <DocTypDC21>952</DocTypDC21>\n            <DocRefDC23>XE25000001</DocRefDC23>\n            <DocRefDCLNG>EN</DocRefDCLNG>\n        </PRODOCDC2>\n        <TRACONCO2>\n            <NamCO27>NCTS UK TEST LAB HMCE</NamCO27>\n            <StrAndNumCO222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO222>\n            <PosCodCO223>SS99 1AA</PosCodCO223>\n            <CitCO224>SOUTHEND-ON-SEA, ESSEX</CitCO224>\n            <CouCO225>GB</CouCO225>\n            <TINCO259>GB954131533000</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>Corleone</NamCE27>\n            <StrAndNumCE222>23, Le Don str</StrAndNumCE222>\n            <PosCodCE223>123-456</PosCodCE223>\n            <CitCE224>Corleone</CitCE224>\n            <CouCE225>IT</CouCE225>\n            <TINCE259>IT27THEBOSS42</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2bcefcd9-3e58-486d-b5c0-9dcd73d64bce",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET ALL IE015 > IE928 >IE028 > IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "edb9fed6-da5f-4d10-bb82-72b64efcf35f",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e2cc851f-7641-455f-aa82-41b20f69deb4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b6bd61c4-251c-407a-a982-a40a3f601c3d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2.17 - IE015 Declaration Invalid TIR Declaration with rejection due to missing TIR Holder ID",
					"item": [
						{
							"name": "2.17.1 POST IE015 Simplified Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e89383f5-ee6e-4ab1-9285-413947a6461a",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC17\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ef9fbb1e-a2ec-499b-9812-976e662d0073",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>TIR</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <CusSubPlaHEA66>DOVER ERTS</CusSubPlaHEA66>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <GUAGUA>\n        <GuaTypGUA1>B</GuaTypGUA1>\n            <GUAREFREF>\n            <OthGuaRefREF4>XE25000001</OthGuaRefREF4>\n            </GUAREFREF>\n    </GUAGUA>\n     <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>ABC</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <PRODOCDC2>\n            <DocTypDC21>952</DocTypDC21>\n            <DocRefDC23>XE25000001</DocRefDC23>\n            <DocRefDCLNG>EN</DocRefDCLNG>\n        </PRODOCDC2>\n        <TRACONCO2>\n            <NamCO27>NCTS UK TEST LAB HMCE</NamCO27>\n            <StrAndNumCO222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO222>\n            <PosCodCO223>SS99 1AA</PosCodCO223>\n            <CitCO224>SOUTHEND-ON-SEA, ESSEX</CitCO224>\n            <CouCO225>GB</CouCO225>\n            <TINCO259>GB954131533000</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>Corleone</NamCE27>\n            <StrAndNumCE222>23, Le Don str</StrAndNumCE222>\n            <PosCodCE223>123-456</PosCodCE223>\n            <CitCE224>Corleone</CitCE224>\n            <CouCE225>IT</CouCE225>\n            <TINCE259>IT27THEBOSS42</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n</CC015B>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aa6b2102-fa07-4960-9515-396a44d939e9",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.17.2 GET ALL IE015 > IE016",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3279547c-0607-4fb4-a25f-33763e128b1d",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2b7506af-8f87-48f1-a880-a2aa0a371005",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e4246e67-0d2a-4c04-8611-355c99594479",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2.18 - Simplified IE015 Declaration, Safety & Security Simplified Declaration at Departure",
					"item": [
						{
							"name": "2.18.1 POST IE015 Simplified Normal Journey Trader Test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1d2a84f2-7df4-4d91-8021-2843af3aef16",
										"exec": [
											"const moment = require('moment');",
											"let now = moment();",
											"now.add('2', 'days');",
											"",
											"let date1 = moment();",
											"date1.add('8', 'days');",
											"",
											"var text=\"TRATESTDEC18\";",
											"var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";",
											"",
											"    for( var i=0; i < 8; i++ )",
											"        text += charset.charAt(Math.floor(Math.random() * charset.length));",
											"",
											"pm.collectionVariables.set(\"DatOfPreMES9\", moment().format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"TimOfPreMES10\", moment().format(\"HHmm\"));",
											"pm.collectionVariables.set(\"DecDatHEA383\", moment().format(\"YYYYMMDD\"));",
											"",
											"pm.collectionVariables.set(\"ArrTimTRACUS085\", now.format(\"YYYYMMDDHHmm\"));",
											"pm.collectionVariables.set(\"DatLimERS69\", date1.format(\"YYYYMMDD\"));",
											"pm.collectionVariables.set(\"RefNumHEA4\",text)",
											"pm.collectionVariables.set(\"IntConRefMES11\",_.random(11190913102542,55190913102542))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "abc4c307-3040-41ac-9ea4-86a295a90864",
										"exec": [
											"var loc = postman.getResponseHeader(\"Location\").toString();",
											"var depId = loc.split(\"/\")[5];",
											"pm.environment.set(\"deptId\",depId);",
											"console.log(\"department id is \"+depId)",
											"pm.test(\"POST IE015 must return response code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"pm.test(\"Validate location \", function () {",
											"    var dept_location = postman.getResponseHeader(\"Location\").toString();",
											"});",
											"if (pm.response.code !== 202) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<CC015B>\n    <SynIdeMES1>UNOC</SynIdeMES1>\n    <SynVerNumMES2>3</SynVerNumMES2>\n    <MesRecMES6>NCTS</MesRecMES6>\n    <DatOfPreMES9>{{DatOfPreMES9}}</DatOfPreMES9>\n    <TimOfPreMES10>{{TimOfPreMES10}}</TimOfPreMES10>\n    <IntConRefMES11>{{IntConRefMES11}}</IntConRefMES11>\n    <AppRefMES14>NCTS</AppRefMES14>\n    <MesIdeMES19>1</MesIdeMES19>\n    <MesTypMES20>GB015B</MesTypMES20>\n    <HEAHEA>\n        <RefNumHEA4>{{RefNumHEA4}}</RefNumHEA4>\n        <TypOfDecHEA24>T1</TypOfDecHEA24>\n        <CouOfDesCodHEA30>IT</CouOfDesCodHEA30>\n        <AutLocOfGooCodHEA41>954131533-GB60DEP</AutLocOfGooCodHEA41>\n        <PlaOfLoaCodHEA46>DOVER018</PlaOfLoaCodHEA46>\n        <CouOfDisCodHEA55>GB</CouOfDisCodHEA55>\n        <IdeOfMeaOfTraAtDHEA78>NC15 REG</IdeOfMeaOfTraAtDHEA78>\n        <NatOfMeaOfTraCroHEA87>GB</NatOfMeaOfTraCroHEA87>\n        <ConIndHEA96>0</ConIndHEA96>\n        <NCTSAccDocHEA601LNG>EN</NCTSAccDocHEA601LNG>\n        <TotNumOfIteHEA305>1</TotNumOfIteHEA305>\n        <TotNumOfPacHEA306>10</TotNumOfPacHEA306>\n        <TotGroMasHEA307>1000</TotGroMasHEA307>\n        <DecDatHEA383>{{DecDatHEA383}}</DecDatHEA383>\n        <DecPlaHEA394>Dover</DecPlaHEA394>\n        <DecPlaHEA394LNG>EN</DecPlaHEA394LNG>\n        <SpeCirIndHEA1>C</SpeCirIndHEA1>\n        <ComRefNumHEA>HQDOV018</ComRefNumHEA>\n        <SecHEA358>1</SecHEA358>\n        <CodPlUnHEA357>MONOPOLI018</CodPlUnHEA357>\n    </HEAHEA>\n    <TRAPRIPC1>\n        <NamPC17>NCTS UK TEST LAB HMCE</NamPC17>\n        <StrAndNumPC122>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumPC122>\n        <PosCodPC123>SS99 1AA</PosCodPC123>\n        <CitPC124>SOUTHEND-ON-SEA, ESSEX</CitPC124>\n        <CouPC125>GB</CouPC125>\n        <TINPC159>GB954131533000</TINPC159>\n    </TRAPRIPC1>\n    <CUSOFFDEPEPT>\n        <RefNumEPT1>GB000060</RefNumEPT1>\n    </CUSOFFDEPEPT>\n    <CUSOFFTRARNS>\n        <RefNumRNS1>CH001252</RefNumRNS1>\n        <ArrTimTRACUS085>{{ArrTimTRACUS085}}</ArrTimTRACUS085>\n    </CUSOFFTRARNS>\n    <CUSOFFDESEST>\n        <RefNumEST1>IT018105</RefNumEST1>\n    </CUSOFFDESEST>\n    <CONRESERS>\n         <ConResCodERS16>A3</ConResCodERS16>\n         <DatLimERS69>{{DatLimERS69}}</DatLimERS69>\n    </CONRESERS>\n    <SEAINFSLI>\n        <SeaNumSLI2>1</SeaNumSLI2>\n        <SEAIDSID>\n            <SeaIdeSID1>NCTS001</SeaIdeSID1>\n    </SEAIDSID>\n    </SEAINFSLI>\n    <GUAGUA>\n        <GuaTypGUA1>1</GuaTypGUA1>\n            <GUAREFREF>\n             <OthGuaRefREF4>20GB0000010000GV3</OthGuaRefREF4>\n            <AccCodREF6>AC01</AccCodREF6>\n            </GUAREFREF>\n    </GUAGUA>\n     <GOOITEGDS>\n        <IteNumGDS7>1</IteNumGDS7>\n        <GooDesGDS23>Wheat</GooDesGDS23>\n        <GooDesGDS23LNG>EN</GooDesGDS23LNG>\n        <GroMasGDS46>1000</GroMasGDS46>\n        <NetMasGDS48>950</NetMasGDS48>\n        <TRACONCO2>\n            <NamCO27>NCTS UK TEST LAB HMCE</NamCO27>\n            <StrAndNumCO222>11TH FLOOR, ALEX HOUSE, VICTORIA AV</StrAndNumCO222>\n            <PosCodCO223>SS99 1AA</PosCodCO223>\n            <CitCO224>SOUTHEND-ON-SEA, ESSEX</CitCO224>\n            <CouCO225>GB</CouCO225>\n            <TINCO259>GB954131533000</TINCO259>\n        </TRACONCO2>\n        <TRACONCE2>\n            <NamCE27>NCTS WEB TEST LAB HMCE</NamCE27>\n            <StrAndNumCE222>ITALIAN OFFICE</StrAndNumCE222>\n            <PosCodCE223>IT99 1IT</PosCodCE223>\n            <CitCE224>MILAN</CitCE224>\n            <CouCE225>IT</CouCE225>\n            <TINCE259>IT11ITALIANC11</TINCE259>\n        </TRACONCE2>\n        <PACGS2>\n            <MarNumOfPacGS21>AB234</MarNumOfPacGS21>\n            <KinOfPacGS23>BX</KinOfPacGS23>\n            <NumOfPacGS24>10</NumOfPacGS24>\n        </PACGS2>\n    </GOOITEGDS>\n    <ITI>\n        <CouOfRouCodITI1>GB</CouOfRouCodITI1>\n    </ITI>\n     <ITI>\n        <CouOfRouCodITI1>BE</CouOfRouCodITI1>\n    </ITI>\n    <ITI>\n        <CouOfRouCodITI1>LU</CouOfRouCodITI1>\n    </ITI>\n    <ITI>\n        <CouOfRouCodITI1>DE</CouOfRouCodITI1>\n    </ITI>\n        <ITI>\n        <CouOfRouCodITI1>AT</CouOfRouCodITI1>\n    </ITI>\n    <ITI>\n        <CouOfRouCodITI1>IT</CouOfRouCodITI1>\n    </ITI>\n      <TRACORSEC037>\n        <TINTRACORSEC044>GB954131533000</TINTRACORSEC044>\n    </TRACORSEC037>\n    <TRACONSEC029>\n        <TINTRACONSEC036>IT27THEBOSS42</TINTRACONSEC036>\n    </TRACONSEC029>\n</CC015B>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET IE015 dept Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4d095491-d272-4e97-b69a-f85d516a1a59",
										"exec": [
											"pm.test(\"Get requested departure Id must return status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.hmrc.1.0+json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.18.2 GET ALL IE015 > IE028 > IE029",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9afb19e-76db-4688-88be-e206052c2e88",
										"exec": [
											"pm.test(\"Get all messages must return status code 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.hmrc.1.0+json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/customs/transits/movements/departures/{{deptId}}/messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"customs",
										"transits",
										"movements",
										"departures",
										"{{deptId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "655a0b1f-3261-41b9-a9ea-6b456a65fb7f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "67ef5d47-481a-49a7-9ad2-afae462ea4e7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "16746856-3d58-4032-a36e-11eb0d989883",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "79509e0c-8239-47a0-ae06-50f0f8b235ba",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "37e0e3b0-741c-4167-9f54-a6047dc19f14",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c7d5b685-170b-42e1-b754-6c88c8d29cfe",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}